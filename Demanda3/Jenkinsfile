pipeline {
    agent any
    environment {
    DOCKERHUB_CREDENTIALS = credentials('jk-dh-tk')
}
    stages {
        stage('SCM Checkout') {
            steps {
                git branch: 'main', credentialsId: 'jk-gh-tk', url: 'https://github.com/Franck-Patrick/Desafio_DellTech.git'
            }
        }

        stage('Build Docker image') {
    steps {
        sh 'docker build -f Demanda3/Dockerfile -t pkdu14/webapp:$BUILD_NUMBER .'
            }
        }

        stage('Login to Docker Hub') {
    steps {
        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
       
        stage('Push Image') {
    steps {
        sh 'docker push pkdu14/webapp:$BUILD_NUMBER'
             }
        }

stage('Deploy Application') {
    steps {
        sh '''
            docker run -d -p 3000:3000 --name webapp_ctr pkdu14/webapp:${BUILD_NUMBER}
           '''
            }
        }
stage('Run Random Command in Container') {
            steps {
                script {
                    // Exemplo de comando aleatório, substitua por um comando que você deseja rodar
                    def commands = ['ls', 'pwd', 'echo Hello World']
                    def randomCommand = commands[new Random().nextInt(commands.size())]
                    
                    // Executando o comando aleatório no container
                    sh "docker exec webapp_ctr ${randomCommand}"
                }
            }
        }
    }
}
